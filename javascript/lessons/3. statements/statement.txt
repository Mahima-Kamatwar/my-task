
1: conditional statement: Conditional statements are used to perform different actions based on different conditions 

conditional statements are: if, if-else, if-else_if, nasted if, swtich case, (?)ternary statement 

1.  if : Executes a block of code if a condition is true. 
 if (condition) {
        // true block
 }
example:
let age = 16
 if(age > 18){
     console.log("can drive")
 }

console.log("programm completed")

2.  if-else: Executes one block if the condition is true, and another if it's false.

 if(condition){
        //true block
 }else{
     // false block
 }
 example:
 if(age > 18){
     console.log('can drive')
 }else{
     console.log("can't drive")
 }
example:
 let num1 = 10
 let num2 = 2
if(num1 > num2){
     console.log("num1 is greater than num2")
 }else{
     console.log("num2 is greater than num1")
 }

3. nested if: A nested if is an if statement inside another if statement. It lets you check multiple conditions in a structured way, like layers

 if(condition){
        if(condition){
         if(condition){
                if(condition){

                  } 
               }
            }
          } 
example:          
wap in js to find out if c is greater than a and b

let a = 25
let b = 20
let c = 30

if (c > a) 
     if (c > b) {
         console.log("c is greater than a & b !")
     } else {
         console.log("c is not greater than a & b !")

 } else {
     console.log("c is not greater than a & b !")
 }


4.if-else_if: Checks multiple conditions in order.

 if(condition){
     // true block
 }else if(condition){

 }else if(){

 }else if(){

 }else{

 }
example:
wap in js to find out greater of a , b & c.
if (a > b) {
    if (a > c) {
        console.log("a is greater than b & c !")
    } else {
        console.log("c is greater than a & b !")
    }
} else if (b > c) {
    console.log("b is greater than a & c !")
} else {
    console.log("c is greater than a & b !")
}
 console.log("programm completed")

 2: looping condtional
 while, do while, for , [for array & objects : forEach, for of , for in, map, filter]
 
   # while loop: In JavaScript, a while loop repeats a block of code as long as the given condition is true.
   syntax:
   while(condition){
   statements
   updation (must effect the condition)
  }
  
  example:
  let number = 100
  while (number >= -100) {
     if (number % 2 == 0) {
         console.log(number)
     }
     number--
  }

  # Do while loop: Runs the block at least once , then repeats while the condition is true.
    syntax:
    do{
        statement
        updation
    }while(condition)

    example:
    let number=10
    do{
        console.log(number)
        number++
    }while(number < 10)



  # For loop: Runs a block of code a specific number of times.
  syntax:
  for(initilize; condition; updation){
    statement
  }
   Initialization :- Executes once before the loop starts(usually used to set a counter).
  
   Condition :- Checked before each iteration ; loop runs if true.
  
   Increment/Decrement :- Updates the loop variable after each iteration
  
  example:
   for (let start = 0; start <= 100; start++) {
        if (start % 2 !== 0) {
            console.log(start)
        }
    }
    console.log("odd program complete")
